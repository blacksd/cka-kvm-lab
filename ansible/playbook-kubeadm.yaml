---
- name: Run Kubeadm init on the master nodes
  hosts: masters
  become: true
  vars:
    skipped: "no"
  tasks:
  - name: Stat
    ansible.builtin.stat:
      dest: /etc/kubernetes/admin.conf
    ignore_errors: true
    register: init_completed
  - name: Init everything
    when: not init_completed.stat.exists
    block:
    - name: Create kubeadm dirs
      ansible.builtin.file:
        path: "/tmp/kubeadm-{{ item }}"
        state: directory
        mode: '0755'
      with_items:
      - patches
      - configs

    - name: Copy kubeadm patches and ClusterConfig
      ansible.builtin.copy:
        src: "{{ item.src  }}"
        dest: "{{ item.dest  }}"
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"
        mode: '0644'
      with_items:
        - src: ./resources/ClusterConfig.yml
          dest: /tmp/kubeadm-configs
        - src: ./resources/kube-apiserver0+json.yaml
          dest: /tmp/kubeadm-patches
        - src: ./resources/etcd0+json.yaml
          dest: /tmp/kubeadm-patches

    - name: Kubeadm init
      when: not skipped | bool
      ansible.builtin.shell:
        cmd: kubeadm init --ignore-preflight-errors=NumCPU,Mem  --config /tmp/kubeadm-configs/ClusterConfig.yml

    - name: Stop here
      ansible.builtin.meta: end_host
      when: skipped | bool

    - name: Create kube
      ansible.builtin.file:
        path: "{{ lookup('env', 'HOME') }}/.kube"
        state: directory
        mode: '0755'

    - name: Copy admin
      ansible.builtin.copy:
        dest: "{{ lookup('env','HOME') }}/.kube/config"
        remote_src: true
        src: /etc/kubernetes/admin.conf
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"
        mode: '0600'

  - name: Create a token for join
    ansible.builtin.shell:
      cmd: kubeadm token create --print-join-command --description "Created by Ansible"
    register: token_join_command

  - ansible.builtin.debug:
      var: token_join_command
      verbosity: 3

- name: Perform the Kubeadm Join with the previous token 
  hosts: workers
  become: true
  vars:
    skipped: "no"

  tasks:
  - name: Stop here
    ansible.builtin.meta: end_host
    when: skipped | bool
  - name: Perform the Kubeadm Join
    ansible.builtin.shell:
      cmd: "{{ hostvars[groups['masters'][0]].token_join_command.stdout }}"